= MACROECONOMICS =

== Content ==

__TOC__

== Growth Model ==

=== Solow Growth Model ===

=== Krueger Growth Model ===

=== Log-Linearization ===

=== Stochastic Growth Model ===

== Dynamic Programming Theory ==

=== Deterministic Dynamic Programming ===

=== Stochastic Dynamic Programming ===

=== Example: Tree Cutting Problem ===

== Labor Market Model ==

=== McCall’s Job Searching Model ===

=== Diamond-Mortenson-Pissarides Model ===

=== Mutation of Searching and Matching Model ===

== Complete Market and Exchange Economy ==

=== Arrow-Deberu Equilibrium ===

==== Setup ====

'''Assumption: (Arrow-Deberu)'''

* There are <math display="inline">I</math> numbers of consumers in total
* The state of the economy is denoted as <math display="inline">S_t</math>, and the history is denoted as <math display="inline">S^t = \{S_\tau\}_{\tau=0}^t</math> 
* Stochastic Endowment Economy, person i’s endowment is denoted as <math display="inline">e_t^i(S^t)</math>
* Identical utility function <math display="inline">U</math> among the consumers
* Complete market, meaning there are contingent claims for each state
* The consumers trade with each other at the beginning of the economy, then they will never trade again
* <math display="inline">Prob(S_{t+1}| S_t) = \pi(S_{t+1}|S_t)</math> is a Markov process

==== Arrow-Deberu Equilibrium ====

'''Definition: (Arrow-Deberu Equilibrium)''' The Arrow-Deberu Equilibrium is defined as a set of price <math display="inline">\{\tilde p^0_t\}</math> of consumption, a set of individual decisions <math display="inline">\{C^i_t(S^t)\}</math>, such that:

<ol style="list-style-type: decimal;">
<li><p>Given the set of price, the individual decision variables solves the following consumer’s problem:</p>
<math display="block">max \sum_{t=0}^{+\infty}\sum_{S^t}\beta^tU(C_t^i(S^t))\pi(S^t)</math>
<p>subject to the budget constraint:</p>
<math display="block">\sum_{t=0}^{+\infty}\sum_{S^t}\tilde p_t^0(S^t)C_t^i(S^t) \leq \sum_{t=0}^{+\infty}\sum_{S^t}\tilde p_t^0(S^t)e_t^i(S^t)</math></li>
<li><p>Markets clears, or the feasible condition holds which means:</p>
<math display="block">\sum_{i\in I}C_t^i(S^t) = \sum_{i\in I}e_t^i(S^t) \space for \space each \space t \space and \space S^t</math></li></ol>

==== Solution ====

'''Solution: (Tractable Method)'''

<ol style="list-style-type: decimal;">
<li><p>Solve the Consumer’s problem with Lagrange method:</p>
<math display="block">L =\sum_{t=0}^{+\infty}\sum_{S^t}\{\beta^tU(C_t^i(S^t))\pi(S^t) + \mu^ip_t^0(S^t)(e_t^i(S^t)-C_t^i(S^t))\}</math>
<p>The First Order Conditions are:</p></li></ol>

<math display="block">\beta^tU'(C_t^i(S^t))\pi(S^t) = \mu^i p_t^0(S^t)</math>
 This is true for any individual. Hence if we take person i First Order Conditions and divided with person j’s equation, we will get:

<math display="block">\frac{U'(C_t^i(S^t))}{U'(C_t^i(S^t))} = \frac{\mu^i}{\mu^j}</math>
 This is true for any time and any state. which means the ratio of the consumption between any two people is a constant for any time and any state history. Hence we could define the total endowment as <math display="inline">Y_t(S^t)</math>, and assume consumer i’s consumption is:

<math display="block">C_t^i(S^t) = \tilde\mu^i\sum_{i\in I}e_t^i(S^t) = \tilde\mu^iY_t(S^t)</math>
 where <math display="inline">\sum_i\tilde\mu^i = 1</math>.

<ol style="list-style-type: decimal;">
<li><p>Solve for the price:</p>
<p>Re-write First Order Conditions as: <math display="inline">\beta^tU'(\tilde\mu^iY_t(S^t))\pi(S^t) = \mu^i p_t^0(S^t)</math>, divided by time zero First Order Conditions, we will get:</p>
<math display="block">p_t^0(S^t) = \beta^t\frac{U'(C_t^i(S^t))}{U'(C_0^i(S_0))}\pi(S^t|S_0) p_0^0</math>
<p>Suppose we assume that the utility has the following property:</p>
<math display="block">\frac{U'(C_t^i(S^t))}{U'(C_0^i(S_0))} = f(\frac{C_t^i(S^t)}{C_0^i(S_0)}) = f(\frac{Y_t(S^t)}{Y_0(S_0)})</math>
<p>Then we can find the Arrow-Deberu Price for the consumption contingents ,which is:</p>
<math display="block">p_t^0(S^t) = \beta^t\frac{U'(Y_t(S^t))}{U'(Y_0(S_0))}\pi(S^t|S_0) p_0^0</math></li>
<li><p>Solve for the consumption allocation:</p>
<p>Plug the prices to the budget constraint for person i, we get:</p>
<math display="block">\sum_{t=0}^{+\infty}\sum_{S^t}\tilde p_t^0(S^t)Y_t(S^t) \tilde \mu^i = \sum_{t=0}^{+\infty}\sum_{S^t}\tilde p_t^0(S^t)e_t^i(S^t)</math>
<p>and hence we can solve the ratio of the consumption:</p>
<math display="block">\tilde \mu^i = \frac{\sum_{t=0}^{+\infty}\sum_{S^t}\tilde p_t^0(S^t)e_t^i(S^t)}{\sum_{t=0}^{+\infty}\sum_{S^t}\tilde p_t^0(S^t)Y_t(S^t) }</math></li></ol>



=== Sequential Market Equilibrium ===

'''Assumption: (Sequential Market)'''

* There are <math display="inline">I</math> numbers of consumers in total
* The state of the economy is denoted as <math display="inline">S_t</math>, and the history is denoted as <math display="inline">S^t = \{S_\tau\}_{\tau=0}^t</math> 
* Stochastic Endowment Economy, person i’s endowment is denoted as <math display="inline">e_t^i(S^t)</math>
* Identical utility function <math display="inline">U</math> among the consumers
* Complete market, meaning there are some arrow securities for each state in next period
* The consumers trade with each other at each period
* <math display="inline">Prob(S_{t+1}| S_t) = \pi(S_{t+1}|S_t)</math> is a Markov process

==== Sequential Market Equilibrium ====

'''Definition: (Sequential Market Equilibrium)''' The Sequential Market Equilibrium is defined as a set of price <math display="inline">\{\tilde q_t(S^t,S')\}</math> of consumption, a set of individual decisions <math display="inline">\{C^i_t(S^t), a_t^i(S^t)\}</math>, such that:

<ol style="list-style-type: decimal;">
<li><p>Given the set of price, the individual decision variables solves the following consumer’s problem:</p>
<math display="block">max \sum_{t=0}^{+\infty}\sum_{S^t}\beta^tU(C_t^i(S^t))\pi(S^t)</math>
<p>subject to the budget constraint:</p>
<math display="block">C_t^i(S^t) +\sum_{S'}\tilde q_t(S^t,S') a_{t+1}^i(S^t,S') \leq e_t^i(S^t)+a_{t}^i(S^{t-1},S_t) \space for \space each \space t \space and \space S^t</math>
<p>and the No-Ponzi Condition:</p>
<math display="block">a_{t+1}^i(S^{t+1}) \geq -\bar A</math></li>
<li><p>Markets clears, or the feasible condition holds which means:</p>
<math display="block">\sum_{i\in I}C_t^i(S^t) = \sum_{i\in I}e_t^i(S^t) \space for \space each \space t \space and \space S^t</math></li></ol>

==== Solution ====

'''Solution: (Tractable Method)'''

<ol style="list-style-type: decimal;">
<li><p>Solve the Consumer’s problem with Lagrange method:</p>
<math display="block">L =\sum_{t=0}^{+\infty}\sum_{S^t}\{\beta^tU(C_t^i(S^t))\pi(S^t) + \mu_t^i(S^t) [e_t^i(S^t)+a_{t}^i(S^{t-1},S_t) - C_t^i(S^t)\\
-\sum_{S'}\tilde q_t(S^t,S') a_{t+1}^i(S^t,S')]\}</math>
<p>The First Order Conditions are:</p>
<math display="block">\beta^tU'(C_t^i(S^t))\pi(S^t) = \mu_t^i(S^t) \\
\mu_{t}^i(S^t)\tilde q_t(S^t,S') = \mu_{t+1}^i(S^t,S')</math>
<p>Combine the First Order Conditions we get the Euler’s Equation:</p>
<math display="block">\tilde q_t(S^t,S') = \beta \frac{U'(C_{t+1}^i(S^t,S'))}{U'(C_t^i(S^t))}\pi(S'|S^t)</math></li>
<li><p>Solve for the price:</p>
<p>Note that from the Euler’s Equation, if the Sequential Market and the Arrow Debreu Market have the same solution then the price of the Arrow securities can be denoted as:</p>
<math display="block">\tilde q_t(S^t,S') = p_{t+1}^0(S^t,S')/p_t^0(S^t)</math></li></ol>

==== Relationship between Two Economies ====

 '''Theorem: (Duality)''' The Solution of the Arrow Debreu Equilibrium and the Sequential Market Equilibrium are the same.

Proof:

First We proof that the solution of the Sequential Market Equilibrium is the solution of the Arrow-Debreu Equilibrium, by adding up all the discounted sequential budget constraints:

<math display="block">lim_{T\to+\infty}\sum_{t=0}^{T} \sum_{S'} (\prod_{j=0}^{t-1}\tilde q_j(S^j,S^{j+1})) C_t^i(S^t) + lim_{T\to+\infty}\sum_{S'}(\prod_{j=0}^{T-1} \tilde q_t(S^j,S^{j+1})) \tilde q_T(S^T,S') a_{T+1}^i(S^T,S')\\
 = lim_{T\to+\infty}\sum_{t=0}^{T-1} \sum_{S'}  (\prod_{j=0}^{t-1}\tilde q_j(S^j,S^{j+1})) e_t^i(S^t)</math>
Since we have the No Ponzi Condition, we have <math display="inline">lim_{T\to+\infty}\sum_{S'}(\prod_{j=0}^{T-1} \tilde q_t(S^j,S^{j+1})) \tilde q_T(S^T,S') a_{T+1}^i(S^T,S') = 0</math>, and we can define <math display="inline">P^0_t(S^t) = \prod_{j=0}^{t-1}\tilde q_j(S^j,S^{j+1})</math>, and the lifetime budget constraint becomes:

<math display="block">\sum_{t=0}^{+\infty}\sum_{S^t}P_t^0(S^t)C_t^i(S^t) \leq \sum_{t=0}^{+\infty}\sum_{S^t}P_t^0(S^t)e_t^i(S^t)</math>
Since we have exactly the same budget constraint, and all the other equations are also the same, we will get the exact same solution, i.e. the solution to the Sequential Market Equilibrium is the solution to the Arrow Deberu Equilibrium.

However, we have already shown that the Arrow Deberu Equilibrium have an unique solution. Since we know that the Sequential Market Equilibrium has a solution, the solution has to be the same. <math display="inline">\blacksquare</math>



=== Social Planner’s Problem ===

==== Setup ====

'''Assumption: (Arrow-Deberu)'''

* There are <math display="inline">I</math> numbers of consumers in total
* The state of the economy is denoted as <math display="inline">S_t</math>, and the history is denoted as <math display="inline">S^t = \{S_\tau\}_{\tau=0}^t</math> 
* Stochastic Endowment Economy, person i’s endowment is denoted as <math display="inline">e_t^i(S^t)</math>
* Identical utility function <math display="inline">U</math> among the consumers
* Social Planner’s problem
* <math display="inline">Prob(S_{t+1}| S_t) = \pi(S_{t+1}|S_t)</math> is a Markov process

==== Social Planner’s Problem ====

'''Definition: (Social Planner’s Problem)''' The Social Planner’s Problem is defined as a set of allocation <math display="inline">\{C^i_t(S^t)\}</math>, such that the social welfare function is maximized: 

<math display="block">max \sum_{t=0}^{+\infty}\sum_{S^t}\beta^t\lambda^i U(C_t^i(S^t))\pi(S^t)</math>
subject to the feasible condition:

<math display="block">\sum_{i\in I}C_t^i(S^t) = \sum_{i\in I}e_t^i(S^t) \space for \space each \space t \space and \space S^t</math>
'''Note:''' Note that the weight <math display="inline">\lambda^i</math> is exogenous.

==== Solution ====

'''Solution: (Tractable Method)'''

Solve the Social Planner’s problem with Lagrange method:

<math display="block">L =\sum_{t=0}^{+\infty}\sum_{S^t}\{\beta^t \lambda^i U(C_t^i(S^t))\pi(S^t) + \phi_t(S^t)(e_t^i(S^t)-C_t^i(S^t))\}</math>
The First Order Conditions are:

<math display="block">\beta^t \lambda^i U'(C_t^i(S^t))\pi(S^t) = \phi_t(S^t)</math>
This is true for any individual. Hence if we take person i First Order Conditions and divided with person j’s equation, we will get:

<math display="block">\frac{U'(C_t^i(S^t))}{U'(C_t^i(S^t))} = \frac{\lambda^j}{\lambda^i}</math>
Just like in the ADE model, this is true for any time and any state. which means the ratio of the consumption between any two people is a constant for any time and any state history. Hence we could define the total endowment as <math display="inline">Y_t(S^t)</math>, and assume consumer i’s consumption is:

<math display="block">C_t^i(S^t) = \tilde\lambda^i\sum_{i\in I}e_t^i(S^t) = \tilde\lambda^iY_t(S^t)</math>
 where <math display="inline">\sum_i\tilde\lambda^i = 1</math>, and <math display="inline">\tilde\lambda^i</math> is determined already.



=== Welfare Theorem ===

==== Duality ====

'''Theorem: (Duality between ADE and Social Planner’s Problem)''' We can solve the Arrow-Debreu Equilibrium by solving the social planer’s problem.

Proof:

Define Total Tax of consumer i as <math display="inline">T_i = \sum_t \sum_{S^t} (e^i_t(S^t)-C^i_t(S^t))\phi_t(S^t)/\lambda_i</math>. When we set <math display="inline">T_i = 0</math>, the solution to Social Planner’s problem and the Arrow Debreu Equilibrium is the same. <math display="inline">\blacksquare</math>

=== Asset Pricing and Lucas Tree ===

==== Arrow-Debreu Asset Pricing ====

'''Assumption: (Arrow-Deberu)'''

* Basic Arrow-Debreu Equilibrium Setup
* Complete market, with one asset to be priced, which is also called Lucas Tree

'''Definition: (Arrow-Deberu Equilibrium)''' The Arrow-Deberu Equilibrium is defined as a set of price <math display="inline">\{\tilde p^0_t, P_t\}</math> of consumption, a set of individual decisions <math display="inline">\{C^i_t(S^t)\}</math>, such that:

<ol style="list-style-type: decimal;">
<li><p>Given the set of price, the individual decision variables solves the following consumer’s problem:</p>
<math display="block">max \sum_{t=0}^{+\infty}\sum_{S^t}\beta^tU(C_t^i(S^t))\pi(S^t)</math>
<p>subject to the budget constraint:</p>
<math display="block">\sum_{t=0}^{+\infty}\sum_{S^t}\tilde p_t^0(S^t)(C_t^i(S^t)+P_t(S^t)b_{t+1}^i(S^t))\\
\leq \sum_{t=0}^{+\infty}\sum_{S^t}\tilde p_t^0(S^t)(e_t^i(S^t)+(P_t(S^t)+d_t(S^t))b_{t}^i(S^{t-1}))</math></li>
<li><p>Markets clears, or the feasible condition holds which means:</p>
<math display="block">\sum_{i\in I}C_t^i(S^t) = \sum_{i\in I}e_t^i(S^t) \space for \space each \space t \space and \space S^t</math>
<p>And asset market clears, i.e.</p>
<math display="block">\sum_{i\in I}b_{t+1}^i(S^t) = B</math></li></ol>

'''Solution: (Asset Pricing)'''

Solving this problem will give us the same First Order Conditions for the contigent claims. However, it will also give us the following Asset Pricing Equation:

<math display="block">P_t(S^t) = \sum_{S'}\beta \frac{U'(C_{t+1}(S^t,S'))}{U'(C_{t}(S^t))}\pi(S'|S^t)(P_{t+1}(S^{t+1})+d_{t+1}(S^{t+1}))</math>
which can be rewrite as:

<math display="block">P_t(S^t) = E[\beta \frac{U'(C_{t+1}(S^t,S'))}{U'(C_{t}(S^t))}(P_{t+1}(S^{t+1})+d_{t+1}(S^{t+1})]</math>


==== Sequential Asset Pricing ====

=== Consumption Asset Pricing Model (CAPM) ===

=== Asset Pricing with Endogenous Growth ===

== Rational Expectation ==

=== Neoclassical Growth Model ===

=== Rational Expectation ===

== Incomplete Market and Heterogeneity ==

=== Huggett Model ===

==== Setup ====

'''Assumption: (The Household)'''

* Endowment economy
* A continuum of households
* Heterogenetic household with no aggregate risk
* Households have access to only risk-free bond
* With borrowing constraint

'''Assumption: (The Market)'''

* Perfect Competition
* Focus on Steady State
* <math display="inline">Prob(n_{t+1}| n_t) = \pi(n_{t+1}|n_t)</math>

==== Competitive Equilibrium ====

'''Definition: (Recursive Competitive Equilibrium)''' The Recursive Competitive Equilibrium at the Steady State in this problem is defined as a set of price of the bond <math display="inline">\{q\}</math>, a set of individual decisions <math display="inline">\{c^i, a^i\}</math> and a set of aggregate variables <math display="inline">\{C, \mu\}</math>, where <math display="inline">\mu(a, y)</math> is the joint distribution of <math display="inline">a</math> and <math display="inline">y</math>, such that:

<ol style="list-style-type: decimal;">
<li><p>Given the set of price and the set of aggregate variables, the individual decision variables solves the following consumer’s problem:</p>
<math display="block">V(a^i, y^i, q ) = max\{U(c^i)+\beta\sum_{{y^{i}}'} V(a', {y^{i}}', q' ) \pi({y^{i}}'|{y^{i}})\}</math>
<p>subject to the budget constraint and the borrowing constraint:</p>
<math display="block">c^i + q{a^i}' \leq a^i+y^i,\space -{a^i}'\leq\bar A</math>
<p>and the perceived law of motion of the price of the bond in next period:</p>
<math display="block">q' = H(q) = q</math>
<p>Note: Since we are solving the Steady State Equilibrium, the bond price does not change, the consumer in the model would just use <math display="inline">q' = q</math> to forecast the bond price in next period. </p></li>
<li><p>Markets clears, which means:</p>
<math display="block">C = \sum_a\sum_yc\mu(a,y),\space A = \sum_a\sum_ya\mu(a,y)=0</math></li>
<li><p>The true law of motion of distribution:</p>
<math display="block">\mu(a',y') = \sum_a\sum_yProb(a',y'|a,y)\mu(a,y)</math>
<p>where the conditional probability is calculated as:</p>
<math display="block">Prob(a',y'|a,y) = \pi(a'|a,y)\pi(y'|a,y)=1_{a'=g(a,y,q)}\pi(y'|y)</math></li></ol>

==== Solution ====

'''Solution: (Quantitative Method)'''

<ol style="list-style-type: decimal;">
<li><p>Pick the initial value of <math display="inline">\{q^0\}</math></p></li>
<li><p>For value <math display="inline">q^j</math>, and solve for the consumer’s recursive problem, and it will give back policy functions <math display="inline">'a = g(a, y, q^j)</math> and <math display="inline">c = g_c(a, y, q^j)</math><br />
Note: The consumer has a borrowing constraint, which means the solution goes in the following way:</p>
<math display="block">L = U(a+y-q^0a')+\beta\sum_{y'}V(a',y',q^0)\pi(y'|y)+\lambda(a'+\bar A)</math>
<p>Derive the Euler Equation:</p>
<math display="block">(ENV)\space V'(a,y,q^0) = U'(c)</math>
<math display="block">(FOC)\space -qU'(c)+\beta \sum_{y'}V'(a',y',q)\pi(y'|y)+\lambda</math>
<p>and it will give the solution as:</p>
<math display="block">a' = -\bar A, \space and \space if \space a’>-\bar A, \space q^0 U'(c) = \beta\sum_{y'}U'(c')\pi(y'|y)</math></li>
<li><p>Use the true law of motion <math display="inline">\mu(a',y') = 1_{a'=g(a,y,q^j)}\pi(y'|y)\mu(a,y)</math> and try to calculate a steady distribution <math display="inline">\mu(a,y|r^j)</math></p></li>
<li><p>Get the excess aggregate asset position by <math display="inline">z(r^j) = \sum_a\sum_yg(a,y,q^j)\mu(a,y|q^j)</math></p></li>
<li><p>If <math display="inline">z(q^j)>0</math>, it means the aggregate demand of bond is too high, which means there are too many people trying to buy the bonds in the market, so the bond price should goes up, which means we should set <math display="inline">q^{j+1} <q^j</math>, and vice versa</p></li>
<li><p>Iterate from step 2, until <math display="inline">|zq(^j)-z(q^{j+1})| < \epsilon</math></p></li></ol>



=== Aiyagari Model ===

==== Setup ====

'''Assumption: (The Household)'''

* A continuum of households
* Heterogenetic household with no aggregate risk
* Different in labor endowment
* Households have access to capital and risk-free bond

'''Assumption: (The Firm)'''

* Representative firm
* Technology: <math display="inline">Y_t = K_t ^\alpha N_t ^{1-\alpha}</math>
* Stochastic shock in productivity, following a Markov Chain

'''Assumption: (The Market)'''

* Perfect Competition
* Focus on Steady State
* <math display="inline">Prob(n_{t+1}| n_t) = \pi(n_{t+1}|n_t)</math>

==== Competitive Equilibrium ====

'''Definition: (Recursive Competitive Equilibrium)''' The Recursive Competitive Equilibrium at the Steady State in this problem is defined as a set of price <math display="inline">\{r, w\}</math>, a set of individual decisions <math display="inline">\{c^i, k^i\}</math> and a set of aggregate variables <math display="inline">\{C, K, \mu\}</math>, where <math display="inline">\mu(k, n)</math> is the joint distribution of <math display="inline">k</math> and <math display="inline">n</math>, such that:

<ol style="list-style-type: decimal;">
<li><p>Given the set of price and the set of aggregate variables, the individual decision variables solves the following consumer’s problem:</p>
<math display="block">V(k^i, n^i, r ) = max\{U(c^i)+\beta\sum_{{n^{i}}'} V(k', {n^{i}}', r' ) \pi({n^{i}}'|{n^{i}})\}</math>
<p>subject to the budget constraint:</p>
<math display="block">c^i + {k^i}' \leq (r+1-\delta)k^i+wn^i</math>
<p>and the perceived law of motion of the interest rate in next period:</p>
<math display="block">r' = H(r) = r</math>
<p>Note: Since we are solving the Steady State Equilibrium, the interest rate of capital does not change, the consumer in the model would just use <math display="inline">r' = r</math> to forecast the interest rate in next period. </p></li>
<li><p>Given the price, the aggregate variables solve the firm’s problem:</p>
<math display="block">D = max\{K^\alpha N^{1-\alpha} - rK - wN\}</math></li>
<li><p>Markets clears, which means:</p>
<math display="block">C = \sum_k\sum_nc\mu(k,n),\space K = \sum_k\sum_nk\mu(k,n),\space and\space N = \sum_k\sum_nn\mu(k,n)</math></li>
<li><p>The true law of motion of distribution:</p>
<math display="block">\mu(k',n') = \sum_k\sum_nProb(k',n'|k,n)\mu(k,n)</math>
<p>where the conditional probability is calculated as:</p>
<math display="block">Prob(k',n'|k,n) = \pi(k'|k,n)\pi(n'|k,n)=1_{k'=g(k,n,r)}\pi(n'|n)</math></li></ol>

==== Solution ====

'''Solution: (Quantitative Method)'''

# Pick the initial value of <math display="inline">\{r^0\}</math>
# For value <math display="inline">r^j</math>, and solve for the consumer’s recursive problem, and combine the solution to the firm’s First Order Conditions will give back policy functions <math display="inline">k' = g(k, n, r^j)</math> and <math display="inline">c = g_c(k, n, r^j)</math>
# Use the true law of motion <math display="inline">\mu(k',n') = 1_{k'=g(k,n,r^j)}\pi(n'|n)\mu(k,n)</math> and try to calculate a steady distribution <math display="inline">\mu(k,n|r^j)</math>
# Get the aggregate capital by <math display="inline">K(r^j) = \sum_k\sum_ng(k,n,r^j)\mu(k,n|r^j)</math> , calculate all the other aggregate variables similarly
# Calculate the excess supply, <math display="inline">z(r^j) = K(r^j)^\alpha N^{1-\alpha} -\sum_k\sum_ng_c(k, n, r^j)\mu(k,n) - \delta K(r^j)</math>
# If <math display="inline">z(r^j)>0</math>, it means the excess aggregate supply is too high, which means the firm will produce less in the next period, so the demand of capital will decrease, which means we should set <math display="inline">r^{j+1} <r^j</math>, and vice versa
# Iterate from step 2, until <math display="inline">|z(r^j)-z(r^{j+1})| < \epsilon</math>

=== Krusell-Smith Model ===

==== Setup ====

'''Assumption: (The Household)'''

* A continuum of households
* Heterogenetic household
* Different in labor endowment
* Households have access to only one asset, which is capital

'''Assumption: (The Firm)'''

* Representative firm
* Technology: <math display="inline">Y_t = z_t K_t ^\alpha N_t ^{1-\alpha}</math>
* Stochastic shock in productivity, following a Markov Chain, generating aggregate shocks

'''Assumption: (The Market)'''

* Perfect Competition
* <math display="inline">Prob(z_{t+1}| z_t) = \pi(z_{t+1}|z_t)</math>
* <math display="inline">Prob(n_{t}| z_t) = \pi(n_t|z_t)</math>

==== Competitive Equilibrium ====

'''Definition: (Recursive Competitive Equilibrium)''' The Recursive Competitive Equilibrium in this problem is defined as a set of price <math display="inline">\{r_t, w_t\}</math>, a set of individual decisions <math display="inline">\{c_t^i, k_t^i\}</math> for each individual consumer <math display="inline">i \in I</math>, and a set of aggregate variables <math display="inline">\{C_t, K_t, \mu(k_t, n_t)\}</math>, where <math display="inline">\mu(k_t, n_t)</math> is the joint distribution of <math display="inline">K_t</math> and <math display="inline">n_t</math>, such that:

<ol style="list-style-type: decimal;">
<li><p>Given the set of price and the set of aggregate variables, the individual decision variables solves the following consumer’s problem:</p>
<math display="block">V(k_t^i, n_t^i, z_t, \mu_t ) = max\{U(c_t^i)+\beta\sum_{n_{t+1}^i}\sum_{z_{t+1}} V(k_{t+1}^i, n_{t+1}^i, z_{t+1}, \mu_{t+1} ) \pi(n_{t+1}^i,z_{t+1}|n_t^i, z_t)\}</math>
<p>subject to the budget constraint:</p>
<math display="block">c_t^i + k_{t+1}^i \leq (r_t+1-\delta)k_t^i+w_tn_t^i</math>
<p>and the perceived law of motion of the distribution of capital and labor endowment for the next period:</p>
<math display="block">\mu_{t+1} = H(\mu_t, z_t ,z_{t+1})</math></li>
<li><p>Given the price, the aggregate variables solve the firm’s problem:</p>
<math display="block">D_t = max\{z_t K_t ^\alpha N_t ^{1-\alpha} - r_t K_t - w_t N_t\}</math></li>
<li><p>Markets clears, which means:</p>
<math display="block">C_t = \int_{i \in I}c_t^idi,\space K_t = \int_{i \in I}k_t^idi,\space and\space N_t = \int_{i \in I}n_t^idi</math></li>
<li><p>The true law of motion of the distribution is consistent with the solution to the consumer’s problem.</p>
<p>Note: The consumers need to forecast the distribution of the the capital in the next period only because they need to predict the aggregate capital in the next period.</p>
<p>Note: One way to solve this problem is instead of forecasting the full distribution, forecasting the moments of the distribution. One simple approximation of the forecasting model is to use only the first order of moments to approximate, i.e. <math display="inline">ln K_{t+1} = a_z+b_zlogK_t</math>.</p></li></ol>

==== Solution ====

'''Solution: (Quantitative Method)'''

<ol style="list-style-type: decimal;">
<li><p>Pick the initial value of <math display="inline">\{a_z^0, b_z^0\}</math></p></li>
<li><p>For value <math display="inline">\{a_z^j, b_z^j\}</math>, plug into the perceived law of motion <math display="inline">ln K_{t+1} = a_z^0+b_z^0logK_t</math>, and solve for the following problem:</p>
<math display="block">V(k_t^i, n_t^i, z_t, K_t ) = max\{U(c_t^i)+\beta\sum_{n_{t+1}^i}\sum_{z_{t+1}} V(k_{t+1}^i, n_{t+1}^i, z_{t+1}, K_t ) \pi(n_{t+1}^i,z_{t+1}|n_t^i, z_t)\}</math>
<p>subject to</p>
<math display="block">c_t^i + k_{t+1}^i \leq (r_t+1-\delta)k_t^i+w_tn_t^i</math>
<math display="block">ln K_{t+1} = a_z^j+b_z^jlogK_t</math>
<p>Note: This is equivalent to solve the consumer’s problem.<br />
Solving this recursive problem, and combine the solution to the firm’s First Order Conditions will give back policy functions <math display="inline">k_{t+1}^i = g(k_t^i, n_t^i, z_t, K_t )</math></p></li>
<li><p>Starting from a set of initial points <math display="inline">\{ k_0^i, n_0^i, z_0, K_0 \}</math>, use the individual decision rules, simulate a panel of technology shock and labor endowment, and use that to generate a panel of individual capital stocks <math display="inline">\{k_{t+1}^i\}_{t=0}^T</math>, and use the panel to generate <math display="inline">K_t = \frac{1}{I}\sum_i k_t^i</math></p></li>
<li><p>Run a regression of <math display="inline">lnK_{t+1} = a_z'+b_z'lnK_t+e_t</math>, and get <math display="inline">\{a_z^j, b_z^j\}</math></p></li>
<li><p>Set <math display="inline">a_z^{j+1} = a_z' </math>, and <math display="inline">b_z^{j+1} = b_z' </math>, and iterate from step 2, until <math display="inline">||(a_z^j,b_z^j) - (a_z^{j+1},b_z^{j+1})|| < \epsilon</math></p></li></ol>
